<?xml version="1.0"?>

<launch>

    <!-- run pointcloud_to_laserscan node -->
    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">

        <remap from="cloud_in" to="/velodyne_points"/>
        <remap from="scan" to="/scan"/>
        <rosparam>
            target_frame: base_link # Leave disabled to output scan in pointcloud frame
            transform_tolerance: 0.01
            min_height: 0.4
            max_height: 5.0

            angle_min: -3.14 # -M_PI/2
            angle_max: 3.14 # M_PI/2
            angle_increment: 0.0087 # M_PI/360.0
            scan_time: 0.3333
            range_min: 0.45
            range_max: 10.0
            use_inf: false
            inf_epsilon: 1.0

            # Concurrency level, affects number of pointclouds queued for processing and number of threads used
            # 0 : Detect number of cores
            # 1 : Single threaded
            # 2->inf : Parallelism level
            concurrency_level: 1
        </rosparam>

    </node>
        <node pkg="pointcloud_to_laserscan" type="laserscan_to_pointcloud_node" name="laserscan_to_pointcloud">

        <remap from="scan_in" to="/scan"/>
        <remap from="cloud" to="/filtered_cloud"/>
        <rosparam>
            target_frame: base_link # Leave disabled to output pointcloud in scan frame
            transform_tolerance: 0.01

            # Concurrency level, affects number of pointclouds queued for processing and number of threads used
            # 0 : Detect number of cores
            # 1 : Single threaded
            # 2->inf : Parallelism level
            concurrency_level: 1
        </rosparam>

    </node>
    <node name="kf_tracker" pkg="multi_object_tracking_lidar" type="kf_tracker" output="screen" />

</launch>
